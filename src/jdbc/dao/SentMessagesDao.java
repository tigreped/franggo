/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package jdbc.dao;

import java.util.Date;
import jdbc.dto.*;
import jdbc.exceptions.*;

public interface SentMessagesDao
{
	/** 
	 * Inserts a new row in the SENT_MESSAGES table.
	 */
	public void insert(SentMessages dto) throws SentMessagesDaoException;

	/** 
	 * Returns all rows from the SENT_MESSAGES table that match the criteria ''.
	 */
	public SentMessages[] findAll() throws SentMessagesDaoException;

	/** 
	 * Returns all rows from the SENT_MESSAGES table that match the criteria 'USER_ID = :userId'.
	 */
	public SentMessages[] findWhereUserIdEquals(int userId) throws SentMessagesDaoException;

	/** 
	 * Returns all rows from the SENT_MESSAGES table that match the criteria 'MESSAGE_ID = :messageId'.
	 */
	public SentMessages[] findWhereMessageIdEquals(int messageId) throws SentMessagesDaoException;

	/** 
	 * Returns all rows from the SENT_MESSAGES table that match the criteria 'SEND_DATE = :sendDate'.
	 */
	public SentMessages[] findWhereSendDateEquals(Date sendDate) throws SentMessagesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the SENT_MESSAGES table that match the specified arbitrary SQL statement
	 */
	public SentMessages[] findByDynamicSelect(String sql, Object[] sqlParams) throws SentMessagesDaoException;

	/** 
	 * Returns all rows from the SENT_MESSAGES table that match the specified arbitrary SQL statement
	 */
	public SentMessages[] findByDynamicWhere(String sql, Object[] sqlParams) throws SentMessagesDaoException;

}
